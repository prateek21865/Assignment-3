import { Request, Response } from 'express';
import { Role } from '../models/role';
import db from '../db';

// Create a new role
export const createRole = async (req: Request, res: Response) => {
    const newRole: Role = {
        id: 0,  // This will be generated by the database
        name: req.body.name,
        key: req.body.key,
        description: req.body.description,
        created_on: new Date(),  // Set to current date
        modified_on: new Date()   // Set to current date
    };

    const result = await db.query(
        'INSERT INTO roles (name, key, description, created_on, modified_on) VALUES ($1, $2, $3, $4, $5) RETURNING *',
        [newRole.name, newRole.key, newRole.description, newRole.created_on, newRole.modified_on]
    );
    
    res.status(201).json(result.rows[0]);
};

// Get all roles
export const getAllRoles = async (req: Request, res: Response) => {
    const result = await db.query('SELECT * FROM roles');
    res.json(result.rows);
};

// Get a specific role by ID
export const getRoleById = async (req: Request, res: Response) => {
    const { id } = req.params;
    const result = await db.query('SELECT * FROM roles WHERE id = $1', [id]);

    if (result.rows.length === 0) {
        return res.status(404).json({ message: 'Role not found' });
    }

    res.json(result.rows[0]);
};

// Update an existing role
export const updateRole = async (req: Request, res: Response) => {
    const { id } = req.params;
    const updatedRole: Partial<Role> = {
        name: req.body.name,
        key: req.body.key,
        description: req.body.description,
        modified_on: new Date() // Update modified_on timestamp
    };

    const result = await db.query(
        'UPDATE roles SET name = $1, key = $2, description = $3, modified_on = $4 WHERE id = $5 RETURNING *',
        [updatedRole.name, updatedRole.key, updatedRole.description, updatedRole.modified_on, id]
    );

    if (result.rows.length === 0) {
        return res.status(404).json({ message: 'Role not found' });
    }

    res.json(result.rows[0]);
};

// Delete a role
export const deleteRole = async (req: Request, res: Response) => {
    const { id } = req.params;
    const result = await db.query('DELETE FROM roles WHERE id = $1 RETURNING *', [id]);

    if (result.rows.length === 0) {
        return res.status(404).json({ message: 'Role not found' });
    }

    res.json({ message: 'Role deleted successfully', deletedRole: result.rows[0] });
};
